# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: publish pvcf pinaries

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

# permissions:
#   contents: read

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: create a binary realease for mac
      run: |
        pyinstaller pcf.py
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.3
      with:
        name: pvcf-${{ matrix.os }}
        # A file, directory or wildcard pattern that describes what to upload
        path: ./dist/pvcf/pvcf

  create-release:
    runs-on: ubuntu-latest
    needs:
      - build
    outputs:
      upload-url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v1.0.0
          release_name: Release v1.0.0
          body: |
            Initial release
          draft: false
          prerelease: false

  upload-artifact:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ubuntu-latest
    needs:
      - create-release
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4.1.7
        with:
        #   # Name of the artifact to download. If unspecified, all artifacts for the run are downloaded.
          name: pvcf-${{ matrix.os }}
        #   # Destination path. Supports basic tilde expansion. Defaults to $GITHUB_WORKSPACE
          path: distbin/
      - name: test
        run: |
          ls -alF distbin
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload-url }}
          asset_path: distbin/pvcf
          asset_name: pvcf-${{ matrix.os }}
          asset_content_type: application/octet-stream
      # - name: Create release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     tag: ${{ github.ref_name }}
      #   run: |
      #     gh release create "${{ github.ref_name }}" \
      #         --repo="$GITHUB_REPOSITORY" \
      #         --title="${GITHUB_REPOSITORY#*/}-${tag#v}" \
      #         --generate-notes
      # - name: Upload release artifacts
      #   uses: Roang-zero1/github-upload-release-artifacts-action@v2
      #   with:
      #     args: "distbin/ "
      #     created_tag: "main"
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      